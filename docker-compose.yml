version: '3'

services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./config/postgres.env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - ./config/pgadmin.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  api:
    image: dash-api
    restart: always
    env_file:
      - ./config/api.env
    depends_on:
      - postgres

  webapp:
    image: dash-webapp
    volumes:
      - webapp-site:/webapp/dist

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - webapp-site:/app/webapp
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
      - webapp
      - pgadmin

  watchtower:
    image: containrrr/watchtower
    env_file:
      - ./config/watchtower.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres-data:
  pgadmin-data:
  webapp-site:
