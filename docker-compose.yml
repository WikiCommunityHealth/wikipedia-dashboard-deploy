version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5433:5432
    env_file:
      - ./config/postgres.env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - ./config/pgadmin.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 8083:80

  webapp:
    image: wiki-dash-webapp
    volumes:
      - webapp-site:/webapp/dist
    ports:
      - 8082:8080

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - webapp-site:/app/webapp
    ports:
      - 80:80
      - 443:443
    depends_on:
      - webapp
      - pgadmin

  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    ports:
    - "8081:8080"
    depends_on:
    - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  # watchtower:
  #   image: containrrr/watchtower
  #   env_file:
  #     - ./config/watchtower.env
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock


volumes:
  postgres-data:
  pgadmin-data:
  webapp-site:
